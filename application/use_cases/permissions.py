import csvimport jsonimport warningsimport requestsfrom requests.auth import HTTPBasicAuthwarnings.filterwarnings('ignore', message='Unverified HTTPS request')users = []vessels = []captains = []class Permissions:    @classmethod    def get_single_vessel_traccar(uniqueId):        url = 'https://iara-prior-notification.scrtl.xyz/api/devices'        params = {'uniqueId': uniqueId}        auth = HTTPBasicAuth('n.vlahovski@scortel.com', 'admin')        response = requests.get(url, headers={'Accept': 'application/json'}, auth=auth, params=params)        if response.status_code == 200:            return response.json()[0] if len(response.json()) > 0 else {}        else:            return {}    @classmethod    def update_vessel_traccar(vessel):        url = f'https://iara-prior-notification.scrtl.xyz/api/devices/{vessel["id"]}'        auth = HTTPBasicAuth('n.vlahovski@scortel.com', 'birka24')        d = json.dumps(vessel, ensure_ascii=False)        response = requests.put(url, headers={'Content-Type': 'application/json'}, auth=auth, json=vessel)        if response.status_code == 200:            return response.json() if len(response.json()) > 0 else {}        else:            return {}        pass    @classmethod    def add_vessel_traccar(vessel):        url = f'https://iara-prior-notification.scrtl.xyz/api/devices/'        auth = HTTPBasicAuth('n.vlahovski@scortel.com', 'admin')        response = requests.post(url, headers={'Content-Type': 'application/json'}, auth=auth, json=vessel)        if response.status_code == 200:            return response.json() if len(response.json()) > 0 else {}        else:            return {}        pass